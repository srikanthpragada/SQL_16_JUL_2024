19-jul-2024
===========
select * 
from employees

select fullname, salary 
from employees

select fullname, salary, salary * 1.1 as newsalary
from employees

select fullname, salary
from employees
where salary > 1000000

select fullname, salary
from employees
where id = 8

select distinct job_id
from employees


select *
from employees
order by salary 

select *
from employees
order by salary  desc


select *
from employees
order by department_id, salary desc

select *
from employees
order by joinedon desc


select *
from employees
where salary > 1000000 and department_id = 'IT'

select *
from employees
where salary >= 500000 and salary <= 1000000

select *
from employees
where (salary >= 500000 and salary <= 1000000) or department_id = 'IT'


select *
from employees
where salary between 500000 and 1000000

select *
from employees
where id between 5 and 10

update employees set salary = null
where id = 7

select * from employees where salary = null

select *
from employees 
where salary is null


22-JUL-2024
============
select *
from employees 
where fullname like 'L%'

select *
from employees 
where fullname like '_i%'

select *
from employees 
where fullname like '% T%'

select *
from employees 
where joinedon like '%-11-%'


select fullname, round(salary * 1.1) new_salary
from employees 
order by 2 desc

insert into leaves(employee_id, leavedate,leavetype) 
   values(5,'2024-3-10','c')

UPDATE EMPLOYEES
SET JOB_ID = 'TL'
WHERE ID = 5;


delete from employees
where id = 5

transcation 
----------
begin transaction 

update employees set salary = 1000000
where id = 5

select * from employees

rollback

-----------------


23-JUL-2024
============

select round(123.656), round(123.567,2)


select fullname, salary, round(salary * 1.1)
from employees

select abs(random()) % 100

select *
from employees
where lower(fullname) like '%m%m%'

select ltrim('   abc xyz'), ltrim('..**..abc','.*')

select substr('Sqlite',-3,2)

select fullname, substr(fullname, instr(fullname, ' ') + 1) as lastname
from employees


select  strftime('%Y', joinedon)
from employees

select * 
from employees
where strftime('%Y', joinedon) = '2021'

SELECT fullname, JULIANDAY(date()) - JULIANDAY(JOINEDON) nodays
FROM EMPLOYEES

24-JUL-2024
==========
SELECT  fullname, email, substr(email, instr(email, '@') + 1) server
FROM EMPLOYEES
where department_id = 'IT'


SELECT fullname,  strftime('%d', joinedon)
FROM EMPLOYEES
where strftime('%d', joinedon) <= '07'


SELECT fullname,  strftime('%d-%m-%Y',joinedon), salary
FROM EMPLOYEES

SELECT fullname,  ifnull(salary, 0)
FROM EMPLOYEES

SELECT fullname,  iif(salary > 1000000, 'Costly', 'Normal')
FROM EMPLOYEES


SELECT  fullname, cast(strftime('%d', joinedon) as integer)
from employees
where cast(strftime('%d', joinedon) as integer) <= 7

SELECT strftime('%Y', joinedon)  + 1
from employees

SELECT sum(salary)
from employees

SELECT count(id), sum(salary)
from employees

SELECT  department_id, sum(salary)
from employees
group by department_id

SELECT  job_id, sum(salary)
from employees
group by job_id


SELECT strftime('%Y', joinedon) year, count(id)
from employees
group by strftime('%Y', joinedon)

SELECT leavetype, count(*)
from leaves
group by leavetype 

update leaves set leavedate  = '2024-03-10'
where id = 10


SELECT leavetype, strftime('%m',leavedate) month,  count(*)
from leaves
group by leavetype , strftime('%m',leavedate)


SELECT  department_id, count(*)
from employees
where salary > 500000
group by department_id 


25-JUL-2024
============
SELECT department_id, count(*)
from employees
group by department_id 
having  count(*) > 2


SELECT employee_id, count(*)
from leaves
group by employee_id
having  count(*) > 2


SELECT employee_id, leavetype, count(*)
from leaves
group by employee_id, leavetype
having  count(*) > 2

SELECT department_id
from employees
where salary > 500000
group by department_id
having  count(*) > 2

select fullname, name
from employees join departments
on employees.DEPARTMENT_ID  = departments.id 

select fullname, title
from employees join jobs
on employees.job_ID  = jobs.id 

select fullname, leavedate, leavetype
from employees join leaves 
on employees.id  = leaves.employee_id
order by 1

select fullname, leavedate 
from employees join leaves
on employees.id  = leaves.employee_id
where leavetype = 's' 


select d.name, sum(salary)
from employees e join departments d
on e.DEPARTMENT_ID = d.id 
group by department_id

select d.name, sum(salary) totalSalary
from employees e join departments d
on e.DEPARTMENT_ID = d.id 
group by department_id


select department_id, sum(hra)
from employees e join payroll p
on e.id = p.employee_id
group by e.DEPARTMENT_ID


SELECT name, count(*)
from employees e join departments d
on e.DEPARTMENT_ID = d.id 
where salary > 500000
group by department_id
having  count(*) > 2


select fullname, leavedate
from employees e left outer join leaves l
on e.id = l.employee_id



26-JUL-2024
============
select fullname,  title
from employees e join jobs j
on e.JOB_ID  = j.id 


select fullname,  title, salary
from employees e join jobs j
on e.JOB_ID  = j.id 
where salary < 500000

select strftime('%Y', leavedate) Year, count(*) No_of_leaves
from leaves
group by  strftime('%Y', leavedate)

select department_id, 
    avg(floor((julianday(date())  - julianday(joinedon) ) / 365))
from employees
group by  department_id

select job_id, avg(salary)
from employees
group by job_id
having avg(salary) < 500000

select fullname, department_id, job_id, salary, (basic+hra-tax-pf), paidon
from employees e join payroll p 
on e.id = p.employee_id

select fullname, title, name
from employees e join departments d on e.department_id = d.id
join jobs j on e.job_id = j.id

select d.name, count(*)
from employees e join departments d on e.department_id = d.id
join leaves l on e.id = l.employee_id
group by d.name 

select fullname, leavedate
from employees e left outer join leaves l on e.id = l.employee_id

select fullname, count(l.id)
from employees e left outer join leaves l on e.id = l.employee_id
group by fullname 
order by 2


select title, count(*)
from employees e join jobs j on e.job_id = j.id
group by title
having count(*) > 1


select fullname, name, title
from employees e join jobs j on e.job_id = j.id
  join departments d on e.DEPARTMENT_ID = d.id 
  join leaves l on  l.employee_id = e.id 
where leavetype = 'c'

27-JUL-2024
============
select e.*
from employees  e join departments d 
on e.department_id = d.id 
join jobs j on e.JOB_ID = j.id 
where j.title like '%lead%' or d.name like 'A%'



select fullname, name, salary, basic, hra
from employees  e join departments d 
on e.department_id = d.id 
join payroll p on e.id = p.employee_id 
where hra > basic * .30 


select *
from departments
where id in
   (
   select department_id
   from employees
   where salary  > 1000000
   )


select *
from employees
where salary <
   (
   select avg(salary)
   from employees
   )


select *
from employees
where id in
   (select employee_id
    from leaves
   )


select *
from employees
where id not in
   (select employee_id
    from leaves
   )


select *
from employees
where salary > 
   (select max(salary)
    from employees
    where department_id = 'IT'
   )


select *
from employees
where id not in
   (select employee_id
    from leaves
    where strftime('%Y', leavedate) = strftime('%Y', date())
   )



select * 
from departments
where id in 
(
    select department_id
    from employees
    where id in
    (
        select employee_id
        from leaves
        where leavetype = 'v'
    )
)



29-JUL-2024
===========

insert into employees(fullname,department_id, job_id, salary, joinedon)
  values('Vivan Richards', 'IT','PR', 
         (select avg(salary) from employees 
          where job_id = 'PR' and department_id = 'IT'),
          date()
        )


CREATE TABLE COSTLY_EMPLOYEES
AS
SELECT * FROM EMPLOYEES
WHERE SALARY > 1000000


SELECT *
FROM EMPLOYEES EMP WHERE SALARY >=
    (SELECT AVG(SALARY)
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID = EMP.DEPARTMENT_ID)


SELECT count(*)
FROM EMPLOYEES  
group by department_id
order by 1 desc 
limit 1

select * 
from employees
order by salary desc 
limit 2


select * 
from employees
order by salary desc 
limit 2 offset 3


select  fullname, salary 
from employees
where department_id = 'IT'
union 
select  fullname, salary 
from employees
where department_id = 'AC'


select  employee_id
from  leaves
intersect 
select  employee_id
from  payroll
where hra > 10000


select  employee_id
from  leaves
except
select  employee_id
from  payroll
where hra > 10000


create view it_employees
as 
select * from employees where department_id = 'IT'

select * from it_employees


30-JUL-2024
===========
select *
from employees emp where joinedon = 
  (select max(joinedon)
   from employees
   where department_id = emp.DEPARTMENT_ID)



select employee_id, count(*)
from leaves
group by employee_id
order by 2 desc 
limit 2


select * from departments 
where id = (
select department_id
from  employees
group by department_id
order by avg(salary) desc 
limit 1
)



create view dept_summary
as
select name, count(*) empcount, sum(salary) totalsalary
from employees join departments on employees.DEPARTMENT_ID = departments.id
group by name

select * from dept_summary



CREATE INDEX EMP_FULLNAME_IDX
ON EMPLOYEES(FULLNAME)


explain query plan  
select * from employees
 where  fullname = 'Joe'

 
